package ntnu.idatt2105.semesterProject.eCommerceMarketplace.controller;

import ntnu.idatt2105.semesterProject.eCommerceMarketplace.accessingdatamysql.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.Map;
import java.util.Optional;

@Controller
public class MainController {
    // This means to get the bean called userRepository, which is auto-generated by Spring

    @Autowired
    private UserRepository userRepository;
    @Autowired
    private ItemRepository itemRepository;

    // Register new user and adds it to database
    @PostMapping("/register")
    public @ResponseBody boolean addNewUser(@RequestBody User user) {

        try {
            userRepository.save(user);
            return true;
        } catch (Exception e) {
            System.out.println(e.getMessage());
            return false;
        }
    }

    // Returns all users
    @CrossOrigin
    @GetMapping("/user/{id}")
    public @ResponseBody Optional<User> getUser(@PathVariable int id) {
        return userRepository.findById(id);
    }

    // Returns user with given id
    // If no user exist with given id, it returns null
    @CrossOrigin
    @GetMapping("/user")
    public @ResponseBody Iterable<User> getAllUsers() {
        return userRepository.findAll();
    }

    @CrossOrigin
    @PostMapping("/login")
    public @ResponseBody boolean isUser(@RequestBody Map<String, Object> payload) {
        String username = payload.get("username").toString();
        String password = payload.get("password").toString();

        for (User user : userRepository.findAll()) {
            if (user.getUsername().equals(username) && user.getPassword().equals(password)) {
                return true;
            }
        }
        return false;
    }


    @CrossOrigin
    @PostMapping("/createitem")
    public @ResponseBody boolean createItem(@RequestBody Item item) {

        try {
            itemRepository.save(item);
            return true;
        } catch (Exception e) {
            System.out.println(e.getMessage());
            return false;
        }
    }
}
